# roles/dotfiles/tasks/main.yml

- name: Создаем директории
  file:
    path: "{{ dotfiles_dir }}/{{ item }}"
    state: directory
  loop:
    - 'ansible'
    - 'emacs'
    - 'emacs/.local'
    - 'emacs/dict'
    - 'npm'

- name: Копируем файлы из ~/.config в ~/.local/dotfiles/
  shell:
    cmd: >
      {% if item.is_dir %}
      rsync -avz --delete {{ user_config_dir }}/{{ item.name }}/ {{ dotfiles_dir }}/{{ item.name }}
      {% else %}
      rsync -avz --delete {{ user_config_dir }}/{{ item.name }} {{ dotfiles_dir }}/{{ item.name }}
      {% endif %}
  loop:
    - { name: 'ansible/ansible.cfg',is_dir: False  }
    - { name: 'alacritty', is_dir: True }
    - { name: 'com.github.johnfactotum.Foliate', is_dir: True }
    - { name: 'devilspie2', is_dir: True }
    - { name: 'doom', is_dir: True }
    - { name: 'dunst', is_dir: True }
    - { name: 'emacs/early-init.el', is_dir: false }
    - { name: 'emacs/init-dev.el', is_dir: false }
    - { name: 'emacs/init.el', is_dir: false }
    - { name: 'emacs/init.org', is_dir: false }
    - { name: 'emacs/.local/env', is_dir: false }
    - { name: 'emacs/dict/english-words.txt', is_dir: false }
    - { name: 'fdm', is_dir: True }
    - { name: 'fvwm', is_dir: True }
    - { name: 'git', is_dir: True }
    - { name: 'ideavimrc', is_dir: True }
    - { name: 'lf', is_dir: True }
    - { name: 'mpv', is_dir: True }
    - { name: 'nodejs', is_dir: True }
    - { name: 'notmuch', is_dir: True }
    - { name: 'npm/npmrc', is_dir: false }
    - { name: 'nvidia-settings', is_dir: True }
    - { name: 'nvim', is_dir: True }
    - { name: 'picom', is_dir: True }
    - { name: 'python', is_dir: True }
    - { name: 'ranger', is_dir: True }
    - { name: 'readline', is_dir: True }
    - { name: 'rofi', is_dir: True }
    - { name: 'sx', is_dir: True }
    - { name: 'systemd', is_dir: True }
    - { name: 'tint2', is_dir: True }
    - { name: 'tmux', is_dir: True }
    - { name: 'wget', is_dir: True }
    - { name: 'xremap', is_dir: True }
    - { name: 'xsettingsd', is_dir: True }
    - { name: 'zathura', is_dir: True }
    - { name: 'zsh', is_dir: True }
    - { name: 'mimeapps.list', is_dir: false}
    - { name: 'user-dirs.dirs', is_dir: false }
    - { name: 'user-dirs.locale', is_dir: false }
  register: rsync_result
  changed_when: rsync_result.stdout != ""

- name: Создаем директории если их нет для .local/bin, .gnupg, .ssh, ./local/rawservices
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop:
    - { path: "{{ dotfiles_dir }}/.local/bin", mode: '0775' }
    - { path: "{{ dotfiles_dir }}/.gnupg", mode: '0775' }
    - { path: "{{ dotfiles_dir }}/.ssh", mode: '0775' }
    - { path: "{{ dotfiles_dir }}/.local/rawservices", mode: '0775' }

- name: Копируем файлы из ~/.local/bin, ~/.gnupg, ~/.ssh  
  shell:
    cmd: "rsync -avz --delete --no-links {{ home_dir }}/{{ item.src }} {{ dotfiles_dir }}/{{ item.dest }}"
  loop:
    - { src: '.local/bin/', dest: '.local/bin/' }
    - { src: '.local/rawservices/', dest: '.local/rawservices/' }
    - { src: '.gnupg/common.conf', dest: '.gnupg/' }
    - { src: '.gnupg/gpg-agent.conf', dest: '.gnupg/' }
    - { src: '.ssh/config', dest: '.ssh/' }
  register: rsync_result
  changed_when: rsync_result.stdout != ""
  
- name: Создаем директории под pam.d,profile.d,smtpd,sv
  become: true
  become_method: sudo
  file:
    path: "{{ dotfiles_dir }}/etc/{{ item }}"
    state: directory
  loop:
    - pam.d
    - profile.d
    - smtpd
    - sv
  tags:
    - create_dirs

- name: Копируем файлы из etc в  ~/.local/dotfiles
  become: true
  become_method: sudo
  shell:
    cmd: >
      {% if item.is_dir | default(false) %}
      rsync -avz {{ system_config_dir }}/{{ item.path }}/ {{ dotfiles_dir }}/etc/{{ item.name }}
      {% else %}
      rsync -avz {{ system_config_dir }}/{{ item.path }} {{ dotfiles_dir }}/etc/{{ item.name }}
      {% endif %}
  loop:
    - { name: 'dnscrypt-proxy', path: 'dnscrypt-proxy', is_dir: true }
    - { name: 'dracut.conf.d', path: 'dracut.conf.d' , is_dir: true}
    - { name: 'itables', path: 'iptables' , is_dir: true}
    - { name: 'pam.d/login', path: 'pam.d/login' }
    - { name: 'profile.d/fixdbus.sh', path: 'profile.d/fixdbus.sh' }
    - { name: 'profile.d/sdkman.sh', path: 'profile.d/sdkman.sh' }
    - { name: 'smtpd/smtpd.conf', path: 'smtpd/smtpd.conf' }
    - { name: 'sudoers.d', path: 'sudoers.d' , is_dir: true}
    - { name: 'sv/agetty-autologin-tty1', path: 'sv/agetty-autologin-tty1' , is_dir: true}
    - { name: 'sv/amneziavpn', path: 'sv/amneziavpn' , is_dir: true}
    - { name: 'sv/runsvdir-snake', path: 'sv/runsvdir-snake' , is_dir: true}
    - { name: 'unbound', path: 'unbound' , is_dir: true}
    - { name: 'X11', path: 'X11' , is_dir: true}
    - { name: 'dhcpcd.conf', path: 'dhcpcd.conf' }  
    - { name: 'environment', path: 'environment' }  
    - { name: 'resolv.conf', path: 'resolv.conf' }  
    - { name: 'rsyslog.conf', path: 'rsyslog.conf' }  
    - { name: 'sysctl.conf', path: 'sysctl.conf' }  
  register: rsync_result
  changed_when: rsync_result.stdout != ""

- name: Меням права с root на snake из etc 
  become: true
  become_method: sudo 
  file:
    path: "{{ dotfiles_dir }}/etc/"
    owner: snake
    group: snake
    state: directory
    recurse: yes
