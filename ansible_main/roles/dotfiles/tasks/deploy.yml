# deploy.yml

- name: Создаем директории для конфигурационных файлов
  file:
    path: "{{ user_config_dir }}/{{ item }}"
    state: directory
  loop:
    - 'ansible'
    - 'emacs'
    - 'emacs/.local'
    - 'emacs/dict'
    - 'npm'
    - 'com.github.johnfactotum.Foliate'
    - 'cwm'
    - 'devilspie2'
    - 'doom'
    - 'dunst'
    - 'fdm'
    - 'fvwm'
    - 'git'
    - 'i3'
    - 'ideavimrc'
    - 'lf'
    - 'mpv'
    - 'nodejs'
    - 'notmuch'
    - 'nvidia-settings'
    - 'nvim'
    - 'picom'
    - 'python'
    - 'ranger'
    - 'readline'
    - 'rofi'
    - 'sx'
    - 'systemd'
    - 'tint2'
    - 'tmux'
    - 'wget'
    - 'xremap'
    - 'xsettingsd'
    - 'zathura'
    - 'zsh'

- name: Распаковываем файлы из ~/.local/dotfiles/ в ~/.config/
  shell:
    cmd: >
      {% if item.is_dir %}
      rsync -avz --delete {{ dotfiles_dir }}/{{ item.name }}/ {{ user_config_dir }}/{{ item.name }}
      {% else %}
      rsync -avz --delete {{ dotfiles_dir }}/{{ item.name }} {{ user_config_dir }}/{{ item.name }}
      {% endif %}
  loop:
    - { name: 'ansible/ansible.cfg', is_dir: False }
    - { name: 'alacritty', is_dir: True }
    - { name: 'com.github.johnfactotum.Foliate', is_dir: True }
    - { name: 'cwm', is_dir: True }
    - { name: 'devilspie2', is_dir: True }
    - { name: 'doom', is_dir: True }
    - { name: 'dunst', is_dir: True }
    - { name: 'emacs/early-init.el', is_dir: False }
    - { name: 'emacs/init-dev.el', is_dir: False }
    - { name: 'emacs/init.el', is_dir: False }
    - { name: 'emacs/init.org', is_dir: False }
    - { name: 'emacs/.local/env', is_dir: False }
    - { name: 'emacs/dict/english-words.txt', is_dir: False }
    - { name: 'fdm', is_dir: True }
    - { name: 'fvwm', is_dir: True }
    - { name: 'git', is_dir: True }
    - { name: 'i3', is_dir: True }
    - { name: 'ideavimrc', is_dir: True }
    - { name: 'lf', is_dir: True }
    - { name: 'mpv', is_dir: True }
    - { name: 'nodejs', is_dir: True }
    - { name: 'notmuch', is_dir: True }
    - { name: 'npm/npmrc', is_dir: False }
    - { name: 'nvidia-settings', is_dir: True }
    - { name: 'nvim', is_dir: True }
    - { name: 'picom', is_dir: True }
    - { name: 'python', is_dir: True }
    - { name: 'ranger', is_dir: True }
    - { name: 'readline', is_dir: True }
    - { name: 'rofi', is_dir: True }
    - { name: 'sx', is_dir: True }
    - { name: 'systemd', is_dir: True }
    - { name: 'tint2', is_dir: True }
    - { name: 'tmux', is_dir: True }
    - { name: 'wget', is_dir: True }
    - { name: 'xremap', is_dir: True }
    - { name: 'xsettingsd', is_dir: True }
    - { name: 'zathura', is_dir: True }
    - { name: 'zsh', is_dir: True }
    - { name: 'mimeapps.list', is_dir: False }
    - { name: 'user-dirs.dirs', is_dir: False }
    - { name: 'user-dirs.locale', is_dir: False }

- name: Создаем директории для .local/bin, .gnupg, .ssh
  file:
    path: "{{ home_dir }}/{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop:
    - { path: '.local/bin', mode: '0755' }
    - { path: '.gnupg', mode: '0700' }
    - { path: '.ssh', mode: '0700' }

- name: Распаковываем файлы из ~/.local/dotfiles/ в домашнюю директорию
  shell:
    cmd: "rsync -avz --delete {{ dotfiles_dir }}/{{ item.src }} {{ home_dir }}/{{ item.dest }}"
  loop:
    - { src: '.local/bin/', dest: '.local/bin/' }
    - { src: '.gnupg/common.conf', dest: '.gnupg/' }
    - { src: '.gnupg/gpg-agent.conf', dest: '.gnupg/' }
    - { src: '.ssh/config', dest: '.ssh/' }

- name: Создаем директории для системных конфигов
  become: true
  become_method: sudo
  file:
    path: "{{ system_config_dir }}/{{ item }}"
    state: directory
  loop:
    - pam.d
    - profile.d
    - smtpd
    - sv
  tags:
    - create_dirs

- name: Распаковываем файлы из ~/.local/dotfiles/etc в /etc
  become: true
  become_method: sudo
  shell:
    cmd: >
      {% if item.is_dir | default(false) %}
      rsync -avz {{ dotfiles_dir }}/etc/{{ item.name }}/ {{ system_config_dir }}/{{ item.path }}
      {% else %}
      rsync -avz {{ dotfiles_dir }}/etc/{{ item.name }} {{ system_config_dir }}/{{ item.path }}
      {% endif %}
  loop:
    - { name: 'dnscrypt-proxy', path: 'dnscrypt-proxy', is_dir: True }
    - { name: 'dracut.conf.d', path: 'dracut.conf.d' , is_dir: True}
    - { name: 'iptables', path: 'iptables' , is_dir: True}
    - { name: 'pam.d/login', path: 'pam.d/login' }
    - { name: 'profile.d/fixdbus.sh', path: 'profile.d/fixdbus.sh' }
    - { name: 'profile.d/sdkman.sh', path: 'profile.d/sdkman.sh' }
    - { name: 'smtpd/smtpd.conf', path: 'smtpd/smtpd.conf' }
    - { name: 'sudoers.d', path: 'sudoers.d' , is_dir: True}
    - { name: 'sv/agetty-autologin-tty1', path: 'sv/agetty-autologin-tty1' , is_dir: True}
    - { name: 'sv/amneziavpn', path: 'sv/amneziavpn' , is_dir: True}
    - { name: 'unbound', path: 'unbound' , is_dir: True}
    - { name: 'X11', path: 'X11' , is_dir: True}
    - { name: 'dhcpcd.conf', path: 'dhcpcd.conf' }  
    - { name: 'environment', path: 'environment' }  
    - { name: 'resolv.conf', path: 'resolv.conf' }  
    - { name: 'rsyslog.conf', path: 'rsyslog.conf' }  
    - { name: 'sysctl.conf', path: 'sysctl.conf' }  
  register: rsync_result
  changed_when: rsync_result.stdout != ""

- name: Меняем права на root для файлов в /etc
  become: true
  become_method: sudo
  file:
    path: "{{ system_config_dir }}/etc/"
    owner: root
    group: root
    state: directory
    recurse: yes

